alias ll='ls -lh'
alias la='ls -aAh'
alias l='ls -CF'
alias g="git status"

# Tell grep to highlight matches
alias grep="grep --color=auto"
alias fgrep="fgrep --color=auto"
alias egrep="egrep --color=auto"

# typo
alias gti=git
alias dokcer=docker

alias ctagsit="ctags --append=no --recurse --totals --exclude=blib --exclude=.svn --exclude=.get --exclude='@.gitignore' --extra=q"

# don't put duplicate lines or lines starting with space in the history.
# HISTCONTROL=ignoreboth
# append to the history file, don't overwrite it
shopt -s histappend

export TERM=xterm-256color
export LANG='en_US.UTF-8'
export EDITOR=vim
export GIT_EDITOR="vim"

# optout
export DOTNET_CLI_TELEMETRY_OPTOUT=1

# get konsole profile name if possible
if hash qdbus 2>/dev/null; then
    export KONSOLE_PROFILE_NAME="$(qdbus $KONSOLE_DBUS_SERVICE $KONSOLE_DBUS_SESSION profile)"
fi

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
export HISTFILESIZE=
export HISTSIZE=
export HISTTIMEFORMAT="[%F %T]: "

export GEM_HOME="$HOME/.gem"
export PATH="/usr/local/opt/ruby/bin:$PATH"

# Tell ls to be colourful
export CLICOLOR=1
export LSCOLORS=Exfxcxdxbxegedabagacad

NPM_PACKAGES="${HOME}/.npm-packages"
export PATH="$NPM_PACKAGES/bin:$PATH"

if command -v manpath 1>/dev/null 2>&1; then
    unset MANPATH # delete if you already modified MANPATH elsewhere in your config
    export MANPATH="$NPM_PACKAGES/share/man:$(manpath)"
fi

# GIT_PROMPT_ONLY_IN_REPO=1
GIT_PROMPT_FETCH_REMOTE_STATUS=0   # uncomment to avoid fetching remote status
GIT_PROMPT_IGNORE_SUBMODULES=1 # uncomment to avoid searching for changed files in submodules
GIT_PROMPT_SHOW_UNTRACKED_FILES=normal # can be no, normal or all; determines counting of untracked files

export FZF_DEFAULT_OPTS='--height 60% --border'

# source stuff
source_list=(
    ~/.fzf.bash
    ~/.asdf/asdf.sh
    ~/.local_bashrc
    $dotfiles_dir/bash/bash-sensible/sensible.bash
    $dotfiles_dir/bash/bash-git-prompt/gitprompt.sh
    /etc/bash_completion
    /usr/local/etc/bash_completion.d
    /usr/local/git/contrib/completion/git-completion.bash
    /usr/share/doc/git/contrib/completion/git-completion.bash
)

for target in "${source_list[@]}"
do
    [ -f $target ] && source $target
done

# activate some env stuff
if [ -n "$(type -t direnv)" ] && [ "$(type -t direnv)" = function ]; then
    # direnv is already initialized
    true
else
    if command -v direnv 1>/dev/null 2>&1; then
        eval "$(direnv hook bash)"
	    alias tmux='direnv exec / tmux'
    fi
fi

# useful functions stolen from https://github.com/Bash-it/bash-it
function mkcd() {
    mkdir -p -- "$*"
    cd -- "$*"
}
# display all ip addresses for this host
function ips ()
{
    if command -v ifconfig &>/dev/null
    then
        ifconfig | awk '/inet /{ print $2 }'
    elif command -v ip &>/dev/null
    then
        ip addr | grep -oP 'inet \K[\d.]+'
    else
        echo "You don't have ifconfig or ip command installed!"
    fi
}
# search through directory contents with grep
function lsgrep ()
{
    ls | grep "$*"
}
# back up file with timestamp
function buf ()
{
    local filename=$1
    local filetime=$(date +%Y%m%d_%H%M%S)
    cp -a "${filename}" "${filename}_${filetime}"
}
# move files to hidden folder in /tmp/.trash
function del() {
    mkdir -p /tmp/.trash && mv "$@" /tmp/.trash;
}

function reset_branch() {
    git reset --hard $(git rev-parse --abbrev-ref HEAD)
}

function set_to_origin() {
    git fetch && git reset --hard origin/$(git rev-parse --abbrev-ref HEAD)
}
# vim: set ft=sh ts=4 sw=4 et ai :

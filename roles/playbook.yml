---
- hosts: localhost
  connection: local
  vars:
    common_packages: [
    curl,
    git,
    libtool,
    clang,
    tmux
    ]
    fedora_packages: [
    autoconf,
    automake,
    cmake,
    gcc,
    gcc-c++,
    make,
    pkgconfig,
    unzip,
    python-pip,
    redhat-rpm-config,
    hostname,
    powerline,
    kernel-devel,
    python-devel,
    the_silver_searcher,
    ctags
    ]
    deb_packages: [
    silversearcher-ag,
    exuberant-ctags,
    powerline,
    build-essential,
    liblua5.1-dev,
    luajit,
    lua5.1,
    automake,
    python-dev,
    python-pip,
    python3-dev,
    python3-pip
    ]
    vim_dir: "{{ lookup('env', 'vim_dir') }}"
    local_home: "{{ lookup('env', 'HOME') }}"
    local_path: "{{ lookup('env', 'PATH') }}"


  tasks:
    - name: Install deps (Red Hat)
      become: true
      become_user: root
      dnf:
        pkg: "{{ item }}"
        state: present
      when: ansible_os_family == 'RedHat'
      with_items: "{{ vars.common_packages + vars.fedora_packages }}"
    - name: Install deps (Debian)
      become: true
      become_user: root
      apt:
        pkg: "{{ item }}"
        state: present
      when: ansible_os_family == 'Debian'
      with_items: "{{ vars.common_packages + vars.deb_packages }}"
    - git_config:
        name: alias."{{ item.alias }}"
        scope: global
        value: "{{ item.val }}"
      with_items:
        -
          alias: st
          val: status
        -
          alias: lol
          val: log --graph --decorate --pretty=oneline --abbrev-commit --all
    - name: Cloning git repos
      git:
        repo: "https://github.com/ammarnajjar/{{ item.repo }}.git"
        dest: "{{ item.dest }}"
        version: "{{ item.branch }}"
        recursive: no
      with_items:
        -
          repo: dotfiles
          dest: "{{ vim_dir }}"
          branch: master
        -
          repo: wombat256mod
          dest: "{{ vim_dir }}/plugged/wombat256mod"
          branch: master
        -
          repo: liquidprompt
          dest: "{{ vim_dir }}/liquidprompt"
          branch: twolinedprompt
        -
          repo: bash-sensible
          dest: "{{ vim_dir }}/bash-sensible"
          branch: ignored-in-history
    - file:
        path: "{{ item.src }}"
        mode: 0644
        state: directory
      with_items:
        -
          src: "{{ local_home }}/.config"
        -
          src: "{{ vim_dir }}"
    - file:
        src: "{{ item.src }}"
        dest: "{{ item.dist }}"
        mode: 0644
        state: link
      with_items:
        -
          src: "{{ vim_dir }}"
          dist: "{{ local_home }}/.vim"
        -
          src: "{{ vim_dir }}"
          dist: "{{ local_home }}/.config/nvim"
        -
          src: "{{ vim_dir }}/vimrc.vim"
          dist: "{{ local_home }}/.vimrc"
        -
          src: "{{ vim_dir }}/vimrc.vim"
          dist: "{{ local_home }}/.config/nvim/init.vim"
    - shell:
        echo "export PATH=\"$vim_dir/neobin/bin:{{ local_path }}\"" >> "{{ local_home }}/.bashrc"
    - shell:
        echo "source \"{{ vim_dir }}/bashrc\"" >> "{{ local_home }}/.bashrc"
    - shell:
        echo "source \"{{ vim_dir }}/tmux.conf\"" >> "{{ local_home }}/.tmux.conf"

# ansible_plybook -c local -i inventory plybook.yml --check
# ansible 2.1.0.0
#   config file = /etc/ansible/ansible.cfg
#   configured module search path = Default w/o overrides

# - assert: { that: "{{ item }} >= 1" }
#   with_items:
#     - ansible_version.minor

